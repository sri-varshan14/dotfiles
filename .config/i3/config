# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your 
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $background i3wm.background #000000
set_from_resource $foreground i3wm.background #000000
set_from_resource $color0 i3wm.color0 #000000
set_from_resource $color1 i3wm.color1 #000000

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
set $mod1 Mod4
set $mod2 Mod1

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 3
new_float pixel 3

# Hide borders
#hide_edge_borders none

# change borders
default_border pixel 3
bindsym $mod+u border none
bindsym $mod+y border pixel 4
#bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:JetBrains Mono 11

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a $myTerm
set $myTerm kitty
bindsym $mod+Return exec $myTerm

# kill focused window
bindsym $mod+c kill

# start program launcher
bindsym $mod+o exec --no-startup-id dmenu_run -i -nb '$color0' -sf '$color0' -sb '$color1' -nf '$color1' -fn 'JetBrains Mono-15' -p 'Enter :' 

# Start Applications
bindsym Print exec --no-startup-id flameshot gui

focus_follows_mouse on

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the arrow keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the arrow keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+z split h
bindsym $mod+v split v
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:

set $fm eDP-1-1
set $sm HDMI-0

set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws10 10

set $ws11 11
set $ws12 12
set $ws13 13
set $ws14 14
set $ws15 15
set $ws16 16
set $ws17 17
set $ws18 18
set $ws19 19
set $ws20 20

workspace 1 output $fm
workspace 2 output $fm
workspace 3 output $fm
workspace 4 output $fm
workspace 5 output $fm
workspace 6 output $fm
workspace 7 output $fm
workspace 8 output $fm
workspace 9 output $fm
workspace 10 output $fm

workspace 11 output $sm
workspace 12 output $sm
workspace 13 output $sm
workspace 14 output $sm
workspace 15 output $sm
workspace 16 output $sm
workspace 17 output $sm
workspace 18 output $sm
workspace 19 output $sm
workspace 20 output $sm

# switch to workspace
bindsym $mod1+1 workspace $ws1
bindsym $mod1+2 workspace $ws2
bindsym $mod1+3 workspace $ws3
bindsym $mod1+4 workspace $ws4
bindsym $mod1+5 workspace $ws5
bindsym $mod1+6 workspace $ws6
bindsym $mod1+7 workspace $ws7
bindsym $mod1+8 workspace $ws8
bindsym $mod1+9 workspace $ws9
bindsym $mod1+0 workspace $ws10

bindsym $mod2+1 workspace $ws11
bindsym $mod2+2 workspace $ws12
bindsym $mod2+3 workspace $ws13
bindsym $mod2+4 workspace $ws14
bindsym $mod2+5 workspace $ws15
bindsym $mod2+6 workspace $ws16
bindsym $mod2+7 workspace $ws17
bindsym $mod2+8 workspace $ws18
bindsym $mod2+9 workspace $ws19
bindsym $mod2+0 workspace $ws20

# Move focused container to workspace
bindsym $mod1+Ctrl+1 move container to workspace $ws1
bindsym $mod1+Ctrl+2 move container to workspace $ws2
bindsym $mod1+Ctrl+3 move container to workspace $ws3
bindsym $mod1+Ctrl+4 move container to workspace $ws4
bindsym $mod1+Ctrl+5 move container to workspace $ws5
bindsym $mod1+Ctrl+6 move container to workspace $ws6
bindsym $mod1+Ctrl+7 move container to workspace $ws7
bindsym $mod1+Ctrl+8 move container to workspace $ws8
bindsym $mod1+Ctrl+9 move container to workspace $ws9
bindsym $mod1+Ctrl+0 move container to workspace $ws10

bindsym $mod2+Ctrl+1 move container to workspace $ws11
bindsym $mod2+Ctrl+2 move container to workspace $ws12
bindsym $mod2+Ctrl+3 move container to workspace $ws13
bindsym $mod2+Ctrl+4 move container to workspace $ws14
bindsym $mod2+Ctrl+5 move container to workspace $ws15
bindsym $mod2+Ctrl+6 move container to workspace $ws16
bindsym $mod2+Ctrl+7 move container to workspace $ws17
bindsym $mod2+Ctrl+8 move container to workspace $ws18
bindsym $mod2+Ctrl+9 move container to workspace $ws19
bindsym $mod2+Ctrl+0 move container to workspace $ws20

# Move to workspace with focused container
bindsym $mod1+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod1+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod1+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod1+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod1+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod1+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod1+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod1+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod1+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod1+Shift+0 move container to workspace $ws10; workspace $ws10

bindsym $mod2+Shift+1 move container to workspace $ws11; workspace $ws11
bindsym $mod2+Shift+2 move container to workspace $ws12; workspace $ws12
bindsym $mod2+Shift+3 move container to workspace $ws13; workspace $ws13
bindsym $mod2+Shift+4 move container to workspace $ws14; workspace $ws14
bindsym $mod2+Shift+5 move container to workspace $ws15; workspace $ws15
bindsym $mod2+Shift+6 move container to workspace $ws16; workspace $ws16
bindsym $mod2+Shift+7 move container to workspace $ws17; workspace $ws17
bindsym $mod2+Shift+8 move container to workspace $ws18; workspace $ws18
bindsym $mod2+Shift+9 move container to workspace $ws19; workspace $ws19
bindsym $mod2+Shift+0 move container to workspace $ws20; workspace $ws20

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Firefox"] $ws2
# assign [class="Pcmanfm"] $ws3

# Open specific applications in floating mode
for_window [title="File Transfer*"] floating enable
for_window [title="Hello World"] floating enable
for_window [class="GParted"] floating enable 
for_window [class="main.py"] floating enable border normal
for_window [class="Pavucontrol"] floating enable
for_window [con_id=__focused__] border pixel 1
#for_window [class="^.*"] border pixel 0


# switch to workspace with urgent window automatically
#for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Ctrl+r reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+Shift+p mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # Originally set to jkl;.
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 4 px or 4 ppt
        bindsym j resize grow height 4 px or 4 ppt
        bindsym k resize shrink height 4 px or 4 ppt
        bindsym l resize grow width 4 px or 4 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Autostart applications
exec_always --no-startup-id bash ~/.config/polybar/launch.sh
exec --no-startup-id xrandr --output eDP-1-1 --auto --left-of HDMI-0 &


# Theme colors
# class                   border  backgr. text    indic.   child_border
  client.focused          $color1 $color1 $color1 $color1
  client.focused_inactive $color1 $color1 #AD69AF $foreground
  client.unfocused        $color1 $color1  #AD69AF #454948
  client.urgent           #CB4B16 #FDF6E3 #AD69AF #268BD2
  client.placeholder      $color1 $color1 #ffffff $foreground

  client.background       $background

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 0
gaps outer 0

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
#gaps inner all set 10
#gaps outer all plus 5

#border_radius 10
# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. 
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) 
# or 0 (remove gaps for current workspace). If you also press Shift 
# with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
		bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

